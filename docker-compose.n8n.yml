version: '3.8'

services:
  n8n:
    image: n8nio/n8n:latest
    container_name: ytempire-n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD:-ytempire2024}
      - N8N_EXECUTION_TIMEOUT=600
      - N8N_EXECUTION_TIMEOUT_MAX=3600
      - WEBHOOK_URL=http://localhost:5678/
      - GENERIC_TIMEZONE=America/New_York
      - N8N_METRICS=true
      - N8N_METRICS_PREFIX=n8n_
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_USER=ytempire
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD:-ytempire123}
    volumes:
      - n8n_data:/home/node/.n8n
      - ./infrastructure/n8n/workflows:/workflows
    networks:
      - ytempire-network
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  postgres:
    image: postgres:15-alpine
    container_name: ytempire-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=ytempire
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-ytempire123}
      - POSTGRES_DB=ytempire
      - POSTGRES_MULTIPLE_DATABASES=ytempire,n8n
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/postgres/init-multi-db.sh:/docker-entrypoint-initdb.d/init-multi-db.sh
    ports:
      - "5432:5432"
    networks:
      - ytempire-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ytempire"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  n8n_data:
  postgres_data:

networks:
  ytempire-network:
    driver: bridge