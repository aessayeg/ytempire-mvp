[pytest]
# Pytest configuration for YTEmpire MVP
# Configured for 80% test coverage target

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = 
    tests
    backend/tests
    frontend/tests
    ml-pipeline/tests

# Markers for test categorization
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    slow: Slow running tests
    performance: Performance tests
    security: Security tests
    visual: Visual regression tests
    asyncio: Async tests
    smoke: Smoke tests
    regression: Regression tests
    critical: Critical path tests

# Coverage settings
addopts = 
    --cov=backend/app
    --cov=ml-pipeline
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=80
    --cov-branch
    --strict-markers
    --verbose
    --tb=short
    --maxfail=5
    -ra

# Coverage exclusions
[coverage:run]
source = .
omit = 
    */tests/*
    */test_*.py
    */__pycache__/*
    */migrations/*
    */venv/*
    */node_modules/*
    */dist/*
    */build/*
    */.pytest_cache/*
    */conftest.py
    */setup.py

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

# Async settings
asyncio_mode = auto

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Parallel execution
[tool:pytest]
# Number of parallel workers
workers = auto
# Distribute tests across workers
dist = loadscope

# Test output
console_output_style = progress
junit_family = xunit2

# Environment variables for testing
env = 
    TESTING=true
    DATABASE_URL=postgresql://test:test@localhost:5432/test_db
    REDIS_URL=redis://localhost:6379/1
    JWT_SECRET_KEY=test_secret_key_for_testing_only