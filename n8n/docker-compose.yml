# N8N Workflow Automation Docker Compose
# Owner: Integration Specialist

version: '3.9'

services:
  n8n:
    image: n8nio/n8n:latest
    container_name: ytempire_n8n
    restart: always
    environment:
      # Basic Configuration
      N8N_BASIC_AUTH_ACTIVE: "true"
      N8N_BASIC_AUTH_USER: ${N8N_USER:-admin}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_PASSWORD:-ytempire_n8n_2025}
      
      # Server Configuration
      N8N_HOST: ${N8N_HOST:-localhost}
      N8N_PORT: 5678
      N8N_PROTOCOL: ${N8N_PROTOCOL:-http}
      N8N_EDITOR_BASE_URL: ${N8N_EDITOR_BASE_URL:-http://localhost:5678}
      
      # Webhook Configuration
      WEBHOOK_URL: ${WEBHOOK_URL:-http://localhost:5678}
      WEBHOOK_TUNNEL_URL: ${WEBHOOK_TUNNEL_URL:-}
      
      # Database Configuration (PostgreSQL)
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: ${N8N_DB_NAME:-n8n}
      DB_POSTGRESDB_USER: ${DB_USER:-ytempire}
      DB_POSTGRESDB_PASSWORD: ${DB_PASSWORD:-ytempire_password}
      DB_POSTGRESDB_SCHEMA: ${N8N_DB_SCHEMA:-n8n}
      
      # Security
      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY:-ytempire-n8n-encryption-key-2025}
      N8N_USER_MANAGEMENT_DISABLED: "false"
      N8N_PUBLIC_API_DISABLED: "false"
      
      # Execution
      EXECUTIONS_PROCESS: main
      EXECUTIONS_DATA_SAVE_ON_ERROR: all
      EXECUTIONS_DATA_SAVE_ON_SUCCESS: all
      EXECUTIONS_DATA_SAVE_MANUAL_EXECUTIONS: true
      
      # Logging
      N8N_LOG_LEVEL: info
      N8N_LOG_OUTPUT: console
      
      # Metrics
      N8N_METRICS: "true"
      N8N_METRICS_PREFIX: n8n_
      
      # External Services Integration
      YTEMPIRE_API_URL: ${YTEMPIRE_API_URL:-http://backend:8000}
      YTEMPIRE_API_KEY: ${YTEMPIRE_API_KEY:-}
      
      # YouTube API Configuration
      YOUTUBE_API_KEY: ${YOUTUBE_API_KEY:-}
      YOUTUBE_CLIENT_ID: ${YOUTUBE_CLIENT_ID:-}
      YOUTUBE_CLIENT_SECRET: ${YOUTUBE_CLIENT_SECRET:-}
      
      # AI Services
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      ELEVENLABS_API_KEY: ${ELEVENLABS_API_KEY:-}
      
      # Timezone
      TZ: UTC
      
    ports:
      - "5678:5678"
      
    volumes:
      # Data persistence
      - n8n_data:/home/node/.n8n
      # Custom nodes (if any)
      - ./custom-nodes:/home/node/.n8n/custom
      # Workflows backup
      - ./workflows:/home/node/.n8n/workflows
      # Credentials backup
      - ./credentials:/home/node/.n8n/credentials
      # Configuration files
      - ./config:/home/node/.n8n/config
      
    networks:
      - ytempire_network
      
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
      
    depends_on:
      postgres:
        condition: service_healthy
        
  # PostgreSQL for N8N (separate from main app database)
  postgres:
    image: postgres:16-alpine
    container_name: n8n_postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-ytempire}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-ytempire_password}
      POSTGRES_DB: ${N8N_DB_NAME:-n8n}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.utf8"
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    volumes:
      - postgres_n8n_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-ytempire}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ytempire_network

  # Redis for N8N queue (optional but recommended for scaling)
  redis:
    image: redis:7-alpine
    container_name: n8n_redis
    restart: always
    command: redis-server --appendonly yes
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    volumes:
      - redis_n8n_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ytempire_network

volumes:
  n8n_data:
    driver: local
  postgres_n8n_data:
    driver: local
  redis_n8n_data:
    driver: local

networks:
  ytempire_network:
    external: true  # Connects to main YTEmpire network