# YTEmpire AlertManager Configuration
# Routes alerts to appropriate channels based on severity

global:
  # Global settings
  resolve_timeout: 5m
  
  # SMTP configuration for email alerts
  smtp_smarthost: 'smtp.gmail.com:587'
  smtp_from: 'alerts@ytempire.com'
  smtp_auth_username: '{{ SMTP_USERNAME }}'
  smtp_auth_password: '{{ SMTP_PASSWORD }}'
  smtp_require_tls: true
  
  # Slack configuration
  slack_api_url: '{{ SLACK_WEBHOOK_URL }}'
  
  # PagerDuty configuration
  pagerduty_url: 'https://events.pagerduty.com/v2/enqueue'

# Templates for alert formatting
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# Root route configuration
route:
  # Default receiver for alerts that don't match any child routes
  receiver: 'default'
  
  # Group alerts by these labels
  group_by: ['alertname', 'cluster', 'service', 'severity']
  
  # Wait before sending initial notification
  group_wait: 30s
  
  # Wait before sending notification about new alerts in a group
  group_interval: 5m
  
  # Wait before resending notification
  repeat_interval: 4h
  
  # Child routes for specific alert routing
  routes:
    # Critical alerts - immediate notification
    - match:
        severity: critical
      receiver: 'critical-alerts'
      group_wait: 10s
      group_interval: 1m
      repeat_interval: 1h
      continue: true
    
    # Database performance alerts (p95 < 5ms target)
    - match:
        component: database
        severity: critical
      receiver: 'database-critical'
      group_wait: 10s
      repeat_interval: 30m
    
    # API performance alerts
    - match:
        component: api
        severity: critical
      receiver: 'api-critical'
      group_wait: 10s
      repeat_interval: 30m
    
    # Video generation cost alerts
    - match:
        alertname: VideoCostExceeded
      receiver: 'cost-alerts'
      group_wait: 1m
      repeat_interval: 2h
    
    # YouTube quota alerts
    - match:
        component: youtube
        severity: critical
      receiver: 'youtube-critical'
      group_wait: 10s
      repeat_interval: 15m
    
    # Infrastructure alerts
    - match:
        component: infrastructure
      receiver: 'infrastructure-alerts'
      group_by: ['alertname', 'instance']
      group_wait: 1m
      group_interval: 5m
      repeat_interval: 2h
    
    # Business metrics alerts
    - match:
        component: business
      receiver: 'business-alerts'
      group_wait: 5m
      group_interval: 30m
      repeat_interval: 6h
    
    # Warning alerts - batched notifications
    - match:
        severity: warning
      receiver: 'warning-alerts'
      group_wait: 5m
      group_interval: 15m
      repeat_interval: 4h
    
    # Info alerts - daily digest
    - match:
        severity: info
      receiver: 'info-alerts'
      group_wait: 30m
      group_interval: 6h
      repeat_interval: 24h

# Inhibition rules - suppress certain alerts when others are firing
inhibit_rules:
  # Suppress warning alerts when critical alerts are firing for same service
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'cluster', 'service']
  
  # Suppress API alerts when service is down
  - source_match:
      alertname: 'ServiceDown'
    target_match_re:
      alertname: 'API.*'
    equal: ['service']
  
  # Suppress database warnings when critical database issues exist
  - source_match:
      alertname: 'DatabaseQueryLatencyHigh'
    target_match:
      alertname: 'DatabaseQueryLatencyWarning'

# Alert receivers configuration
receivers:
  # Default receiver - logs only
  - name: 'default'
    webhook_configs:
      - url: 'http://localhost:9094/webhook'
        send_resolved: true
  
  # Critical alerts - all channels
  - name: 'critical-alerts'
    slack_configs:
      - channel: '#critical-alerts'
        title: '🚨 CRITICAL: {{ .GroupLabels.alertname }}'
        text: '{{ range .Alerts }}{{ .Annotations.summary }}\n{{ .Annotations.description }}{{ end }}'
        send_resolved: true
        actions:
          - type: button
            text: 'View Dashboard'
            url: '{{ (index .Alerts 0).Annotations.dashboard_url }}'
          - type: button
            text: 'Runbook'
            url: '{{ (index .Alerts 0).Annotations.runbook_url }}'
    
    pagerduty_configs:
      - service_key: '{{ PAGERDUTY_SERVICE_KEY }}'
        description: '{{ .GroupLabels.alertname }}: {{ (index .Alerts 0).Annotations.summary }}'
        details:
          severity: '{{ .GroupLabels.severity }}'
          component: '{{ .GroupLabels.component }}'
    
    email_configs:
      - to: 'oncall@ytempire.com'
        headers:
          Subject: '[CRITICAL] {{ .GroupLabels.alertname }}'
        html: |
          <h2>Critical Alert: {{ .GroupLabels.alertname }}</h2>
          {{ range .Alerts }}
          <p><strong>Summary:</strong> {{ .Annotations.summary }}</p>
          <p><strong>Description:</strong> {{ .Annotations.description }}</p>
          <p><a href="{{ .Annotations.dashboard_url }}">View Dashboard</a> | 
             <a href="{{ .Annotations.runbook_url }}">Runbook</a></p>
          {{ end }}
  
  # Database critical alerts (p95 > 5ms)
  - name: 'database-critical'
    slack_configs:
      - channel: '#database-alerts'
        title: '🔴 DATABASE CRITICAL: p95 > 5ms'
        text: |
          *Current p95 Latency:* {{ (index .Alerts 0).Value }}ms
          *Target:* < 5ms
          *Action Required:* Immediate investigation needed
        color: 'danger'
        send_resolved: true
    
    webhook_configs:
      - url: 'http://internal-api/alerts/database-performance'
        http_config:
          bearer_token: '{{ INTERNAL_API_TOKEN }}'
  
  # API critical alerts
  - name: 'api-critical'
    slack_configs:
      - channel: '#api-alerts'
        title: '⚠️ API CRITICAL'
        text: '{{ range .Alerts }}{{ .Annotations.summary }}\n{{ .Annotations.description }}{{ end }}'
        color: 'danger'
        send_resolved: true
  
  # Cost alerts
  - name: 'cost-alerts'
    slack_configs:
      - channel: '#cost-alerts'
        title: '💰 COST ALERT: Video generation > $3'
        text: |
          *Current Cost:* ${{ (index .Alerts 0).Value }}
          *Target:* < $3.00
          *Components:* Check AI service usage
        color: 'warning'
    
    email_configs:
      - to: 'finance@ytempire.com,engineering@ytempire.com'
        headers:
          Subject: '[COST ALERT] Video generation exceeds target'
  
  # YouTube critical alerts
  - name: 'youtube-critical'
    slack_configs:
      - channel: '#youtube-alerts'
        title: '📺 YOUTUBE QUOTA CRITICAL'
        text: |
          *Account:* {{ (index .Alerts 0).Labels.account_id }}
          *Usage:* {{ (index .Alerts 0).Value }}%
          *Action:* Switch to backup account immediately
        color: 'danger'
        send_resolved: true
  
  # Infrastructure alerts
  - name: 'infrastructure-alerts'
    slack_configs:
      - channel: '#infrastructure'
        title: 'Infrastructure Alert: {{ .GroupLabels.alertname }}'
        text: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'
        send_resolved: true
  
  # Business alerts
  - name: 'business-alerts'
    email_configs:
      - to: 'business-team@ytempire.com'
        send_resolved: true
        headers:
          Subject: '[Business Alert] {{ .GroupLabels.alertname }}'
  
  # Warning alerts - batched
  - name: 'warning-alerts'
    slack_configs:
      - channel: '#warnings'
        title: '⚠️ Warning: {{ .GroupLabels.alertname }}'
        text: '{{ range .Alerts }}• {{ .Annotations.summary }}{{ end }}'
        send_resolved: false
  
  # Info alerts - daily digest
  - name: 'info-alerts'
    email_configs:
      - to: 'team@ytempire.com'
        send_resolved: false
        headers:
          Subject: '[Info] Daily Alert Digest'